openapi: 3.0.0
info:
  title: Event Management API
  version: "1.0.0"
  description: >
    API спецификация для системы управления мероприятиями,
    включающей регистрацию, аутентификацию, бронирование, продажу билетов, работу с профилем пользователя и уведомления.
servers:
  - url: https://api.example.com/api/v1
paths:
  /auth/register:
    post:
      summary: Регистрация пользователя
      description: Регистрация нового пользователя в системе.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Иван Иванов"
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
                password:
                  type: string
                  example: "securePassword123"
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  message:
                    type: string
                    example: "User registered successfully."
        '400':
          description: Некорректные входные данные

  /auth/login:
    post:
      summary: Вход пользователя
      description: Аутентификация пользователя и выдача JWT токена.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
                password:
                  type: string
                  example: "securePassword123"
              required:
                - email
                - password
      responses:
        '200':
          description: Вход успешен
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Неверные учетные данные

  /events:
    get:
      summary: Получение списка мероприятий
      description: Возвращает список публичных мероприятий.
      responses:
        '200':
          description: Список мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /events/{eventId}:
    get:
      summary: Получение информации о мероприятии
      description: Возвращает подробную информацию о выбранном мероприятии.
      parameters:
        - in: path
          name: eventId
          schema:
            type: string
          required: true
          description: Идентификатор мероприятия
      responses:
        '200':
          description: Детальная информация о мероприятии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Мероприятие не найдено

  /bookings:
    post:
      summary: Создание бронирования
      description: Создает бронирование для выбранного мероприятия.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                  example: "event123"
                seats:
                  type: array
                  items:
                    type: string
                  example: ["A1", "A2"]
              required:
                - eventId
                - seats
      responses:
        '201':
          description: Бронирование создано
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingId:
                    type: string
                  status:
                    type: string
                    example: "pending"
        '400':
          description: Некорректные данные бронирования
    get:
      summary: Получение списка бронирований
      description: Возвращает список бронирований для текущего пользователя.
      responses:
        '200':
          description: Список бронирований
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'

  /bookings/{bookingId}:
    get:
      summary: Получение деталей бронирования
      description: Возвращает подробности выбранного бронирования.
      parameters:
        - in: path
          name: bookingId
          schema:
            type: string
          required: true
          description: Идентификатор бронирования
      responses:
        '200':
          description: Детали бронирования
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Бронирование не найдено

  /tickets:
    post:
      summary: Покупка билета
      description: Генерирует билет на основе подтвержденного бронирования.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingId:
                  type: string
                  example: "booking123"
              required:
                - bookingId
      responses:
        '201':
          description: Билет успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  ticketId:
                    type: string
                  ticketCode:
                    type: string
                    example: "QR123456789"
        '400':
          description: Некорректные данные бронирования или неподтвержденное бронирование
    get:
      summary: Получение списка билетов
      description: Возвращает список билетов текущего пользователя.
      responses:
        '200':
          description: Список билетов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'

  /users/profile:
    get:
      summary: Получение профиля пользователя
      description: Возвращает данные профиля текущего пользователя.
      responses:
        '200':
          description: Профиль пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Обновление профиля пользователя
      description: Обновляет данные профиля текущего пользователя.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Профиль успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Некорректные входные данные

  /notifications:
    get:
      summary: Получение уведомлений
      description: Возвращает список уведомлений для текущего пользователя.
      responses:
        '200':
          description: Список уведомлений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: string
          example: "event123"
        title:
          type: string
          example: "Концерт группы XYZ"
        description:
          type: string
          example: "Описание мероприятия"
        eventDate:
          type: string
          format: date-time
          example: "2025-03-15T19:00:00Z"
        location:
          type: string
          example: "Клуб ABC, Москва"
        seatingPlan:
          type: object
          description: "JSON объект с описанием схемы зала"
        multimedia:
          type: array
          items:
            type: string
          description: "Массив URL для изображений и видео"
    Booking:
      type: object
      properties:
        bookingId:
          type: string
          example: "booking123"
        userId:
          type: string
          example: "user456"
        eventId:
          type: string
          example: "event123"
        seats:
          type: array
          items:
            type: string
          example: ["A1", "A2"]
        bookingDate:
          type: string
          format: date-time
          example: "2025-03-01T12:00:00Z"
        status:
          type: string
          example: "confirmed"
    Ticket:
      type: object
      properties:
        ticketId:
          type: string
          example: "ticket789"
        bookingId:
          type: string
          example: "booking123"
        ticketCode:
          type: string
          example: "QR123456789"
        issueDate:
          type: string
          format: date-time
          example: "2025-03-01T12:05:00Z"
    User:
      type: object
      properties:
        id:
          type: string
          example: "user456"
        name:
          type: string
          example: "Иван Иванов"
        email:
          type: string
          format: email
          example: "ivan@example.com"
        role:
          type: string
          example: "client"
    Notification:
      type: object
      properties:
        id:
          type: string
          example: "notif001"
        message:
          type: string
          example: "Ваше бронирование подтверждено."
        date:
          type: string
          format: date-time
          example: "2025-03-01T12:10:00Z"
        read:
          type: boolean
          example: false
